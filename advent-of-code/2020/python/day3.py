
import functools
sample_map_str = """
..##.......
#...#...#..
.#....#..#.
..#.#...#.#
.#...##..#.
..#.##.....
.#.#.#....#
.#........#
#.##...#...
#...##....#
.#..#...#.#
"""

day3_problem = """
.##.............##......#.....#
.#.#................#..........
...#..#.##..#.#......#.#.#.#..#
..#......#........#..#..#.#.#..
.......#....#..#..#.......#....
..#..#..##.#...#........#.###..
..#...#..#.....#.##....#.......
....#..###.#......#.##..#...##.
..#..........#.##.#...#........
#...#............##....#..##...
.......##....#.....##..#.#..#.#
..#..#..#...#....#....#....#...
.#...#.##........#####........#
..#..#......#.....##...#.......
....#......##....#.#....#.#..##
#.#.##....##..#.........#.###..
##..###..#..#.......###.......#
...#.#......#.........#....#...
.....#..........#.....##..#.#..
....##......#.#..#....#.#......
..#.....#..##.......##......#..
.........##.##.#..##...........
....#...#.....#....#.#.###....#
.##.#..#...##..#.......#......#
##..#..#..####..#.#..#...#.....
..###..#..#..#.###..#....#.##..
......#...###.#.#.....#........
.....#...#.#...#.......#.....#.
#........#..##...........#..#..
.#.##.##...#.....#.#....#..#...
..##.##....#.....#....#....##..
#.........##...##..#.....#..#..
........#.####....#...##.....#.
.#.#...#..#..#.#......##.....#.
..#..........##..#.#.#....#...#
#.......#...#...#.....#.##.#...
..#.....#..#.....####.#..#.#.##
...#.#..#...#.....#...#.#.#.#.#
.#..##....##.....#..#....###...
....#......##.#.#.....#......#.
..#.#...#......#.....##.......#
..#...###...#..#.#...#..#.....#
#..............#.....#....##..#
.#...#.......#.............#...
..###....#.##........#.#.......
#.##.......#..#............###.
#...#..##.#.#............######
..##..#....#.#.###...#..##.##..
.#...#.###.#....#...#....#...#.
#...#.......#...........#...##.
##.#......#####.............#..
....#..#......##..#..........#.
#.....#.....#.#.......#...#...#
....#...#.#..##........#.#..##.
..##.....##............#.#.###.
#.........#........#..###......
............#..................
.#.###...####...#.#..#......#..
...##.###.#....##.#..####..#.##
..#####.#.##...#.#...##.##....#
........##...#...#....##.....##
#...........###...#.#...##.#...
##......#...#.......###........
..#..#.##.#..###....#..#.###.#.
...#.#.#...#....#.##..#...#....
........#.##...##.#.....##...##
.#..........##..#..#..#.#...#..
#.#...#.##.#....#.##..#........
.#.#.#....##..##.####.....###..
..#....##....#..#..#..##.......
..##...#.......#...##.#....#...
...####.#.#...........#.#...#..
....####.....#.#.....#....##.##
..#.....#.#.............##....#
#.#....#####.##..####.#...#.#..
#.#....#.##.#.#.##..#.#...#....
......#.......#.......#.....#..
..#.....#....###.###..#..#..#..
#..#....##.###...##.....#......
..#..#...#..#.##..........#....
...#.#.#......#....#.##..#..##.
....##.#....#..#...##....###...
##.#.###.....#..#.#.#..#.....##
##..#.#........#...#..#.#......
....#.#.......##.#...........#.
.......##...#...#...#.....#....
.....#....#..#..###.#...#......
............#.#..#......#.#....
...##..#.##....##..##.#......#.
#.#.#......#.#.....#.#.#..#.#.#
...###..........#..#..#.##.....
......#......#......###..##....
#...##...#....#....#..#...#.#..
.......#..#......##.......#....
...#..#..#.....#.....#......##.
..#....###..........##..#...#..
..........#..#.#...#......#..#.
#...#....#.##.........#.#.#...#
.#.#.#...#.#...#.#..#..#....#.#
#.##....#..#.........#.##.##..#
..#.#..##.#....#.###.#...#....#
.#.......#...#.#.........#....#
.......#...#..........#.#..#...
...#.....##..#....#...###...#.#
#....##.##..........#.......#..
.##..##......#...#....#.##....#
....#.....##...##.#..#.........
...#.#..##.#.#..#.......#....#.
.#...#.#.#.#..#..#.##.......#..
..#..##...#.#..#.......#.#####.
.......#.#...........#....#.#..
.#.###..........#...#..#...#...
..#.#............##......##....
...##..#...###...##....#.#.##..
....#.##...#..#.#.#...........#
....#..#....##.....#.##.#.....#
..##......##.#.........#....#.#
###...#...#..#.#...#...........
.####.....#.....#.#....#..#....
.#....#..#..#..#...##.....###.#
#....##.#....#.##..#......##..#
.........#..#.#.....#.#....##.#
.....#.#...#....#.#...#....#..#
.#...#.#.....#.#......#.#......
#....##.......#.............#..
#..#...#........##..#..#......#
####..##.#..##..#.........####.
.#.##..#.#..#.#.#.##...#..#.#.#
.##.#..#............#......#...
###....#.##....#..#...#........
.....#..###..........#..#......
.##..##.....#..##....#...#.....
#...##...........#..#...###..#.
#..##....#...#.##.##....#......
...#...#..#.#.......##.......##
....#.....#..#...#.........#.#.
.#...##.#......#.#..#..#...##..
...##...##.##...##...#..#......
#..##.#..#..#............#...#.
..#.....#.........#........#.#.
#.#...#...#......#.#......#....
.##.....##.#.#....#.##...##.#..
.##..##.#.#....#.##............
.#.##.....##.#...#...###....#..
.#..............#.#....###.###.
....#..#...#.#.#..........#.#.#
.#.#..#.#.#...###..#...##......
.#.#.....###......#..........#.
........#.##...............#.#.
...#.#.#......#..#..##........#
..#.##......#.......#..#......#
...#...#...#...#..#..#........#
..#....#.....#....#..##........
.....#..#...##....#......##....
...##..##..#..........##....#.#
..#....#..#...#.##..#.....##...
###...#.#....#........#.......#
......#...#..#....###.........#
..###.#...#...#...#.#..###.#...
.##.#.......#.#..#..#......#.#.
...##...........#.#..#.#..#....
.......#.....####.#.....#...#.#
......##......##.#.#.#...#.#..#
..###.#####..#....#.#...#..##..
.....#..#......#........#......
#..##....#.#.##....#....#......
.#....#.##.####.##..#..#......#
#...##...#.#...##.#.##.##...#..
........#.#........#.#...#..#..
.#....###..#......#.##.###..#..
.#..#..#..#..#...#.#.........##
....#...#..#..............#....
........#...##.....#.......#...
..#......#.#..#.#..#.#.#...###.
....#...####....###....#......#
#...#.#...................#.##.
..#.#.###...#....##....##......
#..##..#.........#....#....####
.#....###...#.#...#......#...#.
......#..#.#..#.##...#.#.#..#..
.#...#.#.....#..##......#..#...
##.#..##.....##.#.#.......##...
.##.##.##..#...#.#.##.##.......
.#.#......#.....#...#.#..#.....
...#...........#..#.##..##..#..
.....#...##......#........#.#..
....#..............##.........#
..####.#....##..##......##.#.#.
.#.#..#...#..........#...###..#
....#.#.##.....###.#..#.##.....
.......##.#.#..#...#...##.#....
...#.##.....#....#...#...#.....
##.#.##..#..#.#.....#.#..#.....
..#..##........#....###..#..#..
..#.........##.....#......#...#
...##..........##......#.#.#...
#.....#..#..#......#......#....
.##...#..##....#.......##..#.#.
.#...##...##......####.##.#....
.....#.........#.#.####......#.
...#.....#.#.........##..#.....
##.#.###.#..#.#..#............#
...##..#.#....#....#..#........
..#.###......#...#.#.....#...#.
....##.##..#.....#...#.#.#....#
.......#.#..#...........#.#....
.#.#..##.#.......#.#..#.....###
...#.#.....#.#..#.##..#...#.#..
...#......##....#..............
......#...#....................
..#........#...##.##.#..#.#.#..
.#.###.#.##..##..#....##....#..
.....#..#.#...#.#..#..#.......#
..........#.##.#..##..####.....
............#.#......#.........
.#....#..#......#.....##.......
.....#........#.....##.#..#.#..
#..#.##...#.#.....#...#.####...
......#...#....#.##..##.#...#..
.#.#.##......##....#.#....#.##.
#.#.#....#.###....##....##.....
.##..#...#.##......#..#..#...##
...#....###....#...........#.#.
#.#.##.##...##....#....##.#...#
.#.#######.......#......#......
#......#...#.#.#.###....#.##..#
......##..#..##.........##.#.##
....##...#.#....##.....#.....#.
..#.#........##........#.#..##.
.....#..#.##.....#.....#..#.#..
.#..............#.......#......
.............#..#..........#...
.#..#.##....##.#..#...##.......
...........#..#.......#.#....#.
.#..#..........##...#.#.#...#..
......#....#..###....#......#..
.#...#...##..#..#..##..#..#.#..
#.#.........#....#..........##.
...##..#..##...#....##...##.##.
..#....#.####.........#.....##.
.....#.#...#.#...#.##.#...##..#
#...#.....#..#.......#...#..#..
..#.......#..##.#.....#....#...
.#.....#..##.#.....#...#.#...#.
.....#.##..........##....#...#.
...#....#...#........##...#...#
....##...#....#..........#.....
...#....##..#..####..##.#...#.#
#...###.###..#....##.#.........
.#.......#......#.........#....
..#..##..#.........##..........
#......#.#.##...#...#####......
......#.....####......#....#...
.........#..#..#...#....#.#....
....#........#...##....#.......
...##.#...#..........#....#....
........#.......#.##..#..#...#.
....#..##...........#.....#..#.
#....#...............#.#....#..
.#........#....#.#...#.......#.
#.......##..........#.......#..
...#....#...##.#..#.......#....
#..#.##...#.#...#...#...#....#.
###...#...#....#....#....#...#.
##......#.#.......#....#..#....
......#......#....#.#.#..###..#
.#.#.##.....#..#..........#....
##...#.#.#..##....#.....#.#....
#.##...#...#.#...####..#.......
.....##..#.#.#....#..##..#.#...
....###.#.........##.....#.....
......##...........#........#.#
.#.........##..................
.........##...#.............#.#
......##...#...#.........#..##.
#..#.......#..##.......###.....
....#.#.....#............##....
.....#..#......#....#.....##...
##......##...................#.
#....#............#.#.###.##...
.#.....#........#.....#...#....
......##.......######......##..
.#....##....#..###....#.......#
..............##.#..#.......#.#
.#..#..........#..#.##.........
......##.#..#......#.#....##.#.
#.....#.##...#.....#...#..#...#
.#....#..##.....#.....#.#.#....
..#......#.##..#.........#.#.#.
.#..##...#...#.....#..#..#.#..#
#.#.##.##.................#.#.#
.#..#.#..##.#.......#.......##.
#...#...#..##...#...##...#...#.
....#......#..#...#.....##..#..
..............##......#...#.#..
..##..#.......#..#..###.#.#....
.#..#..#...#.......#...#...##.#
.#...#.......###..#.##.###.....
##.#...#......#.....#..#.......
##....##............#.....#..#.
.....#...##......##.....#....##
#...##..#....#..##....###.#...#
.....#..#.#.....#.##..##....#..
.#.....#.#........#...#.#......
......#....#.#........#.#......
.##..#...............###...##.#
.......###.#.#......###.....#..
.......#..##...#....#.##..#.##.
..#.......##.......#.....#....#
.#......#....#..##..#.#.#..##..
###......#...#..#.............#
.#....#..#.#......##...........
.#....#.##.....#..#.......#..##
....#...#...#..#.....#..##..#.#
#.#.#.......##.#..#.#....#.....
##.#.......#...#...#.#......##.
#....#.#...........#######.....
...#.#.##.#......##..###.......
..#.#....#..#.................#
........#..##..#.....#....#.##.
...#.#..#..#..#..............##
.##.......###.#......#....#..##
..##.##.#......#....#..#...#..#
"""

def obj_to_num(obj):
    if obj == '.':
        return 0
    elif obj == '#':
        return 1
    return None

def parse_row(row):
    return list(map(obj_to_num, row))
    
def parse_map(input):
    splitted = input.split()
    return list(map(parse_row, splitted))

def next_position(row, col, row_count, col_count):
    if row + 1 < row_count:
        return (row + 1, (col + 3) % col_count)
    return None
    
def generate_path(current_row, current_col, row_count, col_count, next_position, path=[]):
    pos = next_position(current_row, current_col, row_count, col_count)
    if pos is None:
        return path
    else:
        row, col = pos
        path.append((row, col))
        return generate_path(row, col, row_count, col_count, next_position, path)

def collect_objects(path, field):
    return list(map(lambda pos: field[pos[0]][pos[1]], path))

def sum_objects(objects):
    return functools.reduce(lambda x, y: x+y, objects, 0)

def calculate_sample_objects():
    field = parse_map(sample_map_str)
    path = generate_path(0, 0, len(field), len(field[0]), next_position)
    objects = collect_objects(path, field)
    return sum_objects(objects)

def calculate_day1_objects():
    field = parse_map(day3_problem)
    path = generate_path(0, 0, len(field), len(field[0]), next_position)
    objects = collect_objects(path, field)
    return sum_objects(objects)

def calculate_object_count(slope_func):
    field = parse_map(sample_map_str)
    path = generate_path(0, 0, len(field), len(field[0]), slope_func)
    objects = collect_objects(path, field)
    return sum_objects(objects)

def slope_func(slope):
    slope_row, slope_col = slope
    def next_position(row, col, row_count, col_count):
        if row + slope_row < row_count:
            return (row + slope_row, (col + slope_col) % col_count)
    return next_position

def calculate_day3_objects():
    slope_list = [[1,1],[1,3],[1,5],[1,7],[2,1]]
    slope_func_list = list(map(slope_func, slope_list))
    tree_count_list = list(map(calculate_object_count, slope_func_list))
    #print("list : ", tree_count_list)
    return functools.reduce(lambda x, y:x * y, tree_count_list, 1)
    

if __name__ == '__main__':
    gen_map = parse_map(sample_map_str)
    print(gen_map)